---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: |
    ### How to get an API key
    Our API is currently in beta. If you would like to get an API key, please contact us at [support@mydomain.io](mailto:support@mydomain.io)

    ### Request Content-Type
    The Content-Type for POST and PUT requests should be set to `application/json`. This is a custom media type that is used to identify requests that follow the [JSON:API specification](https://jsonapi.org/).

    ### Authentication
    All endpoints require additional parameters, api version as well as the token, which is sent in the `X-API-VERSION` and `Authorization` header respectively.
  x-logo:
    url: https://example.com/logo.png
paths:
  "/oauth/token":
    post:
      summary: Create a token
      tags:
      - OAuth Tokens
      security:
      - api_version: []
      parameters:
      - name: grant_type
        in: query
        schema:
          type: string
        required: true
      - name: email
        in: query
        schema:
          type: string
        required: true
      - name: password
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          description: new use has been registerd and token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                  created_at:
                    type: integer
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type:
                    - array
                    - 'null'
                  error_code:
                    type:
                    - integer
                    - 'null'
                required:
                - access_token
                - token_type
                - expires_in
                - created_at
  "/api/videos":
    get:
      summary: List all videos
      tags:
      - Videos
      security:
      - api_version: []
      responses:
        '200':
          description: videos found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/video"
                required:
                - status
                - message
                - data
    post:
      summary: Create a video
      tags:
      - Videos
      parameters: []
      responses:
        '200':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/video"
                required:
                - status
                - message
                - data
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video:
                  type: object
                  properties:
                    url:
                      type: string
                  required:
                  - url
              required:
              - video
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    api_version:
      type: apiKey
      name: X-API-VERSION
      in: header
  responses:
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    not_found:
      description: Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    unprocessable_entity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    internal_server_error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    method_not_allowed:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/error"
  schemas:
    meta:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
      - status
      - message
      example:
        status: success
        message: success
      description: Meta response
      additionalProperties: false
    error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          nullable: true
        error_code:
          type: string
          nullable: true
      required:
      - status
      - message
      example:
        status: fail
        message: Bad Request
      description: Error response
      additionalProperties: false
    pagination:
      type: object
      properties:
        current_page:
          type: integer
        next_page:
          type: integer
        prev_page:
          type: integer
        total_pages:
          type: integer
        limit_value:
          type: integer
      required:
      - current_page
      - next_page
      - prev_page
      - total_pages
      - limit_value
      example:
        current_page: 1
        next_page: 2
        prev_page:
        total_pages: 1
        limit_value: 10
      description: Pagination response
      additionalProperties: false
    success:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
      required:
      - data
      example:
        status: success
        message: success
        data: {}
      description: Success response
      additionalProperties: false
    success_array:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
      required:
      - data
      example:
        status: success
        message: success
        data: []
      description: Success response
      additionalProperties: false
    success_pagination:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
      required:
      - data
      - pagination
      example:
        status: success
        message: success
        data: []
        pagination:
          current_page: 1
          next_page: 2
          prev_page:
          total_pages: 1
          limit_value: 10
      description: Success response
      additionalProperties: false
    video:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
          nullable: true
        url:
          type: string
        created_at:
          type: string
          nullable: true
      required:
      - id
      - title
      - url
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
      required:
      - id
      - email
servers:
- url: "{host}"
  description: Testing Server
  variables:
    host:
      default: https://api.ads.dropfoods.com
      enum:
      - https://api.ads.dropfoods.com
      - http://localhost:3000
security:
- bearerAuth: []
  api_version: []
